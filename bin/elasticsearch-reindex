#!/usr/bin/env node

var cli           = require('commander'),
    os            = require('os'),
    Migrator      = require('../lib/migrator')
    // pace          = require('pace')(100);

cli
.version('1.0.10')
.option('-f, --from [value]', 'source index, eg. http://192.168.1.100:9200/old_index/old_type')
.option('-t, --to [value]', 'to index, eg. http://192.168.1.100:9200/new_index/new_type')
.option('-c, --concurrency [value]', 'concurrency for reindex', os.cpus().length)
.option('-b, --bulk [value]', 'bulk size for a thread', 100)
.option('-s, --scroll [value]', 'default 1m', '1m')
.option('-o, --request_timeout [value]', 'default 60000', 60000)
.option('-l, --log_path [value]', 'to output to a file; otherwise uses stdout', null)
.option('-v, --log_level [value]', 'default INFO', 'INFO')
.option('-n, --max_docs [value]', 'default -1 unlimited', -1)
.parse(process.argv);

var opts = cli.opts();

var options = {
  from: opts.from,
  to: opts.to,
  rename_aliases: true,
  concurrency: opts.concurrency,
  bulk: opts.bulk,
  scroll: opts.scroll,
  request_timeout: opts.request_timeout,
  max_docs: opts.max_docs,
  log_path: opts.log_path,
  log_level: opts.log_level,
  custom_indexer: cli.args[0]
}

var migrator = new Migrator(options, function(msg){
  if (msg == 'done') {process.exit()};
});

migrator.migrate()